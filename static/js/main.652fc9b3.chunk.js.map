{"version":3,"sources":["component/noteTaker.js","component/notesDisplay.js","App.js","reportWebVitals.js","index.js"],"names":["NotesTaker","setitemVal","itemVal","settodo","todo","useEffect","console","log","saveTodo","str","JSON","stringify","localStorage","setItem","className","placeholder","type","onChange","e","target","value","onClick","text","id","Math","random","NotesDisplay","notes","noteEl","filter","el","parse","App","useState","getItem","todoList","map","note","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uOAkCeA,MAhCf,YAA0D,IAArCC,EAAoC,EAApCA,WAAYC,EAAwB,EAAxBA,QAASC,EAAe,EAAfA,QAASC,EAAM,EAANA,KAa/CC,qBAAU,WACNC,QAAQC,IAAIH,GACZI,MACF,CAACJ,IAEH,IAAII,EAAW,WACX,IAAIC,EAAMC,KAAKC,UAAUP,GACzBQ,aAAaC,QAAQ,QAAQJ,IAGjC,OACI,sBAAKK,UAAU,aAAf,UACA,uBAAOC,YAAY,aAAaC,KAAK,OAAOC,SAvBhC,SAACC,GACbjB,EAAWiB,EAAEC,OAAOC,QAsB6CA,MAAOlB,IACxE,sBAAMY,UAAU,UAAUO,QApBhB,WACVlB,GAAQ,SAACe,GACL,MAAM,GAAN,mBAAUA,GAAV,CAAa,CAACI,KAAKpB,EAAQqB,GAAkB,IAAdC,KAAKC,eAExCxB,EAAW,KAgBX,qBCXOyB,MAff,YAA2D,IAApCC,EAAmC,EAAnCA,MAAOC,EAA4B,EAA5BA,OAAYxB,GAAgB,EAApBmB,GAAoB,EAAhBnB,MAAMD,EAAU,EAAVA,QAO5C,OACI,sBAAKW,UAAU,gBAAf,UACI,sBAAMA,UAAU,aAAaO,QAP3B,WACNlB,EAAQC,EAAKyB,QAAO,SAACC,GAAD,OAAQA,EAAGP,KAAOK,EAAOL,OAC7CX,aAAaC,QAAQ,QAAQH,KAAKqB,MAAM3B,KAKpC,eACA,mBAAGU,UAAU,OAAb,SAAqBa,QCqBlBK,MA5Bf,WAAgB,IAAD,EACiBC,mBAAS,IAD1B,mBACN/B,EADM,KACGD,EADH,KAETW,aAAasB,QAAQ,UAEvBtB,aAAaC,QAAQ,QAAQ,MAG/B,IAAIsB,EAAWzB,KAAKqB,MAAMnB,aAAasB,QAAQ,UAPlC,EASUD,mBAASE,GATnB,mBASN/B,EATM,KASDD,EATC,KAYb,OACE,sBAAKW,UAAU,MAAf,UACE,2CAEA,cAAC,EAAD,CAAYb,WAAYA,EAAYC,QAASA,EAASC,QAASA,EAASC,KAAMA,IAE9E,qBAAKU,UAAU,kBAAf,SACEV,EAAKgC,KAAK,SAAAC,GAAI,OACd,cAAC,EAAD,CAA4BV,MAAOU,EAAKf,KAAMC,GAAIc,EAAKd,GAAIK,OAAQS,EAAMjC,KAAMA,EAAMD,QAASA,GAA3EkC,EAAKd,aCbjBe,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.652fc9b3.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react'\r\n\r\nfunction NotesTaker({setitemVal, itemVal, settodo, todo}){\r\n\r\n    var itemValue = (e) => {\r\n        setitemVal(e.target.value)\r\n    }\r\n\r\n    var addItem = () => {\r\n        settodo((e) =>{\r\n            return[...e, {text:itemVal,id: Math.random()*1000}]\r\n        })\r\n        setitemVal(\"\")\r\n    }\r\n\r\n    useEffect(() =>{\r\n        console.log(todo)\r\n        saveTodo()\r\n    },[todo])\r\n\r\n    var saveTodo = () =>{\r\n        var str = JSON.stringify(todo)\r\n        localStorage.setItem(\"todos\",str)\r\n    }\r\n\r\n    return(\r\n        <div className=\"note-taker\" >\r\n        <input placeholder=\"Add a item\" type=\"text\" onChange={itemValue} value={itemVal}/>\r\n        <span className=\"add-btn\" onClick={addItem}> + </span>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default NotesTaker","import React from 'react'\r\n\r\nfunction NotesDisplay({notes, noteEl, id, todo, settodo}) {\r\n\r\n    var del = () => {\r\n        settodo(todo.filter((el) => el.id !== noteEl.id));\r\n        localStorage.setItem(\"todos\",JSON.parse(todo))\r\n    }\r\n\r\n    return(\r\n        <div className=\"notes-display\">\r\n            <span className=\"remove-btn\" onClick={del}>+</span>\r\n            <p className=\"note\">{notes}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NotesDisplay","import React, { useState, useEffect } from 'react'\nimport './App.css';\nimport NotesTaker from './component/noteTaker'\nimport NotesDisplay from './component/notesDisplay'\n\nfunction App() {\n  const [itemVal, setitemVal] = useState(\"\")\n  if(!localStorage.getItem(\"todos\")){\n\n    localStorage.setItem(\"todos\",\"[]\")\n  }\n  \n  var todoList = JSON.parse(localStorage.getItem(\"todos\"))\n\n  const [todo,settodo] = useState(todoList)\n\n\n  return (\n    <div className=\"App\">\n      <h1>ToDo List</h1>\n\n      <NotesTaker setitemVal={setitemVal} itemVal={itemVal} settodo={settodo} todo={todo} />\n\n      <div className=\"notes-container\">\n      { todo.map( note =>(\n        <NotesDisplay key={note.id} notes={note.text} id={note.id} noteEl={note} todo={todo} settodo={settodo} />\n        ))}\n      \n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}